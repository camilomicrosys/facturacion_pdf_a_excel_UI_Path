<Activity mc:Ignorable="sap sap2010" x:Class="Main" VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="708,3448" sap2010:WorkflowViewState.IdRef="ActivityBuilder_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="29">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>UiPath.UIAutomationCore.Contracts</x:String>
      <x:String>UiPath.PDF.Activities</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.Excel</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="51">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.Watcher</AssemblyReference>
      <AssemblyReference>System.IO.Packaging</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.AccessControl</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.DriveInfo</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.PDF.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Linq.Parallel</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Linq.Queryable</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Principal" sap:VirtualizedContainerService.HintSize="718,3383" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="ruta" />
      <Variable x:TypeArguments="s:Object[]" Name="listaFicheros" />
      <Variable x:TypeArguments="x:String" Name="textopdf" />
      <Variable x:TypeArguments="s:Object[]" Name="arraypdftexto" />
      <Variable x:TypeArguments="x:String" Name="factura" />
      <Variable x:TypeArguments="x:String" Name="fecha" />
      <Variable x:TypeArguments="x:String" Name="total" />
      <Variable x:TypeArguments="x:Int32" Name="contadorCelda" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:InputDialog Options="{x:Null}" OptionsString="{x:Null}" DisplayName="Input Dialog" sap:VirtualizedContainerService.HintSize="656,248" sap2010:WorkflowViewState.IdRef="InputDialog_1" IsPassword="False" Label="en que ruta se encuenta la carpeta con las facturas?" Title="[ruta]">
      <ui:InputDialog.Result>
        <OutArgument x:TypeArguments="x:String">[ruta]</OutArgument>
      </ui:InputDialog.Result>
    </ui:InputDialog>
    <Assign DisplayName="almacenamos todos los archivos pdf encontrados" sap:VirtualizedContainerService.HintSize="656,70" sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="s:Object[]">[listaFicheros]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="s:Object[]">[directory.GetFiles(ruta,"*.pdf")]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="656,612" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_1" InstanceCachePeriod="3000" WorkbookPath="C:\Users\Lenovo\Documents\UiPath\facturas_pdf\resultante.xlsx">
      <ui:ExcelApplicationScope.Body>
        <ActivityAction x:TypeArguments="ui:WorkbookApplication">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Do Esto se ejecuta una vez(encabezado por eso las celdas fijas)" sap:VirtualizedContainerService.HintSize="400,493" sap2010:WorkflowViewState.IdRef="Sequence_4">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:ExcelWriteCell Cell="A1" DisplayName="Write Cell decimos donde escribir y que escribir de momento estamos con los encabezados del exel" sap:VirtualizedContainerService.HintSize="338,97" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_1" SheetName="Hoja1" Text="Numero factura" />
            <ui:ExcelWriteCell Cell="B1" DisplayName="Write Cell decimos donde escribir y que escribir de momento estamos con los encabezados del exel" sap:VirtualizedContainerService.HintSize="338,97" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2" SheetName="Hoja1" Text="Fecha" />
            <ui:ExcelWriteCell Cell="C1" DisplayName="Write Cell decimos donde escribir y que escribir de momento estamos con los encabezados del exel" sap:VirtualizedContainerService.HintSize="338,97" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_3" SheetName="Hoja1" Text="total" />
          </Sequence>
        </ActivityAction>
      </ui:ExcelApplicationScope.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ExcelApplicationScope>
    <Assign DisplayName="inica en 2 por que en estas la celda 1 fue el encabezado ya luego llena todas las celdas aumentando 1 a 1" sap:VirtualizedContainerService.HintSize="656,70" sap2010:WorkflowViewState.IdRef="Assign_6">
      <Assign.To>
        <OutArgument x:TypeArguments="x:Int32">[contadorCelda]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:Int32">2</InArgument>
      </Assign.Value>
    </Assign>
    <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="656,2101" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[listaFicheros]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="x:Object">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:Object" Name="fichero" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="620,1967" sap2010:WorkflowViewState.IdRef="Sequence_2">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:StartProcess Arguments="{x:Null}" WorkingDirectory="{x:Null}" DisplayName="abre el pdf de la ruta que vienen en fichero iterado" FileName="[fichero.ToString]" sap:VirtualizedContainerService.HintSize="558,61" sap2010:WorkflowViewState.IdRef="StartProcess_1">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:StartProcess>
            <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" SpecialKey="{x:Null}" Activate="True" DisplayName="esto es para el pdf en edicion con esas teclas cogemos datos de pdf" sap:VirtualizedContainerService.HintSize="558,61" sap2010:WorkflowViewState.IdRef="SendHotkey_1" Key="5" KeyModifiers="Ctrl, Shift">
              <ui:SendHotkey.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="b8f65752-2cc6-4118-8ad5-8ebcffafd9a3" InformativeScreenshot="8cac1846d2fc31853d4f954209c5e145" Selector="&lt;wnd app='acrobat.exe' cls='AcrobatSDIWindow' omit:title='Factura 1.pdf - Adobe Acrobat Reader (64-bit)' /&gt;">
                  <ui:Target.TimeoutMS>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:Target.TimeoutMS>
                  <ui:Target.WaitForReady>
                    <InArgument x:TypeArguments="ui:WaitForReady" />
                  </ui:Target.WaitForReady>
                </ui:Target>
              </ui:SendHotkey.Target>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:SendHotkey>
            <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" DisplayName="Send Hotkey 'acrobat.exe Factura'" sap:VirtualizedContainerService.HintSize="558,61" sap2010:WorkflowViewState.IdRef="SendHotkey_2" Key="enter" KeyModifiers="None" SpecialKey="True">
              <ui:SendHotkey.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="bed2df01-58d8-4908-a644-b3e00d91cd5a" InformativeScreenshot="e004425fdcee45fb8c85f8f6687deaea" Selector="&lt;wnd app='acrobat.exe' cls='AcrobatSDIWindow' omit:title='Factura 1.pdf - Adobe Acrobat Reader (64-bit)' /&gt;">
                  <ui:Target.TimeoutMS>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:Target.TimeoutMS>
                  <ui:Target.WaitForReady>
                    <InArgument x:TypeArguments="ui:WaitForReady" />
                  </ui:Target.WaitForReady>
                </ui:Target>
              </ui:SendHotkey.Target>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:SendHotkey>
            <Sequence DisplayName="extraerdatos pdf, debemos insatlar en paquetes pdf uipath" sap:VirtualizedContainerService.HintSize="558,1276" sap2010:WorkflowViewState.IdRef="Sequence_3">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:ReadPDFText PreserveFormatting="{x:Null}" DisplayName="Read PDF Text lee todo el texto de la ruta que pasamos" FileName="[fichero.ToString]" sap:VirtualizedContainerService.HintSize="496,69" sap2010:WorkflowViewState.IdRef="ReadPDFText_1" Range="All" Text="[textopdf]" />
              <WriteLine DisplayName="Write Line mostramos todo el texto que obtuvo del pdf abierto" sap:VirtualizedContainerService.HintSize="496,97" sap2010:WorkflowViewState.IdRef="WriteLine_1" Text="[textopdf]" />
              <Assign DisplayName="Assign el lee el txto por cada texto hace salto de linea entonces aca los accedemos" sap:VirtualizedContainerService.HintSize="496,70" sap2010:WorkflowViewState.IdRef="Assign_2">
                <Assign.To>
                  <OutArgument x:TypeArguments="s:Object[]">[arraypdftexto]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="s:Object[]">[textopdf.Split(Environment.NewLine.ToArray, StringSplitOptions.RemoveEmptyEntries)]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign DisplayName="al imprimir el textopdf en la factura esta en la 4 poscion siendo cero la primera, en el debu de la pantalla" sap:VirtualizedContainerService.HintSize="496,70" sap2010:WorkflowViewState.IdRef="Assign_3">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[factura]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[arraypdftexto(4).ToString]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign DisplayName="al imprimir el textopdf en la factura esta en la 4 poscion siendo cero la primera, en el debu de la pantalla" sap:VirtualizedContainerService.HintSize="496,70" sap2010:WorkflowViewState.IdRef="Assign_4">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[fecha]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[arraypdftexto(2).ToString]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign DisplayName="al imprimir el textopdf en la factura esta en la 4 poscion siendo cero la primera, en el debu de la pantalla" sap:VirtualizedContainerService.HintSize="496,70" sap2010:WorkflowViewState.IdRef="Assign_5">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[total]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[arraypdftexto(24).ToString]</InArgument>
                </Assign.Value>
              </Assign>
              <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="496,97" sap2010:WorkflowViewState.IdRef="WriteLine_2" Text="[&quot;factura &quot;+factura+&quot; fecha &quot;+fecha+&quot; total &quot;+total]" />
              <Sequence DisplayName="Escritura en Excel" sap:VirtualizedContainerService.HintSize="496,331" sap2010:WorkflowViewState.IdRef="Sequence_8">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="434,209" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_2" InstanceCachePeriod="3000" WorkbookPath="C:\Users\Lenovo\Documents\UiPath\facturas_pdf\resultante.xlsx">
                  <ui:ExcelApplicationScope.Body>
                    <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="Do Esto se ejecuta una vez(encabezado por eso las celdas fijas)" sap:VirtualizedContainerService.HintSize="400,90" sap2010:WorkflowViewState.IdRef="Sequence_6">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:ExcelWriteCell Cell="[&quot;A&quot;+contadorCelda.ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="338,97" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_8" SheetName="Hoja1" Text="[factura]" />
                        <ui:ExcelWriteCell Cell="[&quot;B&quot;+contadorCelda.ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="338,97" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_9" SheetName="Hoja1" Text="[fecha]" />
                        <ui:ExcelWriteCell Cell="[&quot;C&quot;+contadorCelda.ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="338,97" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_10" SheetName="Hoja1" Text="[total]" />
                      </Sequence>
                    </ActivityAction>
                  </ui:ExcelApplicationScope.Body>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:ExcelApplicationScope>
              </Sequence>
            </Sequence>
            <ui:CloseApplication DisplayName="cierra cada ficero luego de abrirlo" sap:VirtualizedContainerService.HintSize="558,116" sap2010:WorkflowViewState.IdRef="CloseApplication_1">
              <ui:CloseApplication.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="7521a8eb-308f-4a67-b724-17294b72c89f" InformativeScreenshot="295adacd8f7e44e830f119668b645891" Selector="&lt;wnd app='acrobat.exe' cls='AcrobatSDIWindow' omit:title='Factura 1.pdf - Adobe Acrobat Reader (64-bit)' /&gt;">
                  <ui:Target.TimeoutMS>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:Target.TimeoutMS>
                  <ui:Target.WaitForReady>
                    <InArgument x:TypeArguments="ui:WaitForReady" />
                  </ui:Target.WaitForReady>
                </ui:Target>
              </ui:CloseApplication.Target>
            </ui:CloseApplication>
            <Assign sap:VirtualizedContainerService.HintSize="558,70" sap2010:WorkflowViewState.IdRef="Assign_8">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Int32">[contadorCelda]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Int32">[contadorCelda+1]</InArgument>
              </Assign.Value>
            </Assign>
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
    </ui:ForEach>
  </Sequence>
</Activity>